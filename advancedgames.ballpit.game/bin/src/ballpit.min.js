var Global={};Global.Loaded={generic:{},level:{}};var Config={};Config.Core={},Config.Core.Dimensions={width:360,height:640},Config.Core.Renderer=0,Config.Core.Parent="Container",Config.ResourceLists={GENERIC:[{key:"images",type:"resourcelist",path:"src/data/generic/images.json"},{key:"spritesheets",type:"atlaslist",path:"src/data/generic/spritesheets.json"}],LEVELS:[[{key:"map",type:"map",path:"src/data/levels/level_1/map.json"}]]};var Settings={};Settings.Velocity={},Settings.Velocity.BALL=300;var scene=scene||{};scene.Gridscene=function(){function Gridscene(){Phaser.Group.call(this,ADCore.phaser,null,"Gridscene"),console.log("Entering Gridscene"),this.viewContainer=new ADCore.ViewContainer,this.addChild(this.viewContainer),this.tilemap=new Tilemap(Global.Loaded.level.map),this.ballContainer=new ballpit.BallContainer,this.ballController=new ballpit.BallController(this.tilemap.mainLayer,this.ballContainer),this.ballController.Initialize(),this.swipePositions={start:null,end:null},Listener.Listen(ADCore.InputEvent.ON_DOWN,this,this._onDown.bind(this)),Listener.Listen(ADCore.InputEvent.ON_UP,this,this._onUp.bind(this))}Gridscene.prototype=Object.create(Phaser.Group.prototype),Gridscene.prototype.constructor=Gridscene;var p=Gridscene.prototype;return p.update=function(deltatime){this.swipePositions.start&&!this.swipePositions.end&&Debug.DrawLine(this.swipePositions.start,inputSystem.inputPosition,"#FF0000",!1),this.ballContainer.Update(deltatime)},p.render=function(){this.viewContainer.render()},p._onDown=function(caller,params){this.swipePositions.start=params.position.Clone()},p._onUp=function(caller,params){this.swipePositions.end=params.position.Clone();var diff=this.swipePositions.end.Clone().Substract(this.swipePositions.start);if(0!==diff.x&&0!==diff.y){var selected=this.tilemap.mainLayer.GetTileByScreenPosition(this.swipePositions.start);if(this.ballController.CanSwap(selected)){var targeted=this.tilemap.mainLayer.GetNeighbourFromTileByDirection(selected,diff.Normalize());this.ballController.CanSwap(targeted)&&(selected.occupier.beginning=selected,targeted.occupier.beginning=targeted,this.ballController.Swap(selected,targeted))}}this.swipePositions.start=null,this.swipePositions.end=null},p.dispose=function(){},Gridscene}();var scene=scene||{};scene.Uiscene=function(){function Uiscene(){Phaser.Group.call(this,ADCore.phaser,null,"Entityscene");var halfWidth=Config.Core.Dimensions.width/2;this.background=new ADCore.Interface(new Vector2(0,0),"menubackground"),this.addChild(this.background),this.logo=new ADCore.Interface(new Vector2(0,0),"logo"),this.logo.anchor.set(.5,.5),this.logo.x=halfWidth,this.logo.y=.66*this.logo.height,this.addChild(this.logo),this.logo.Play("entry"),this.startButton=new ADCore.Button(new Vector2(this.logo.x,this.logo.y+this.logo.height),"buttoninactive"),this.startButton.onInputDown=this.onStartButtonInputDown.bind(this),this.addChild(this.startButton)}Uiscene.prototype=Object.create(Phaser.Group.prototype),Uiscene.prototype.constructor=Uiscene;var p=Uiscene.prototype;return p.onStartButtonInputDown=function(){this.newscene=sceneLoader.Switch(scene.Entityscene)},p.Dispose=function(){this.removeChild(this.background),this.background.Dispose(),delete this.background,this.removeChild(this.logo),this.logo.Dispose(),delete this.logo,this.removeChild(this.startButton),this.startButton.Dispose(),delete this.startButton},Uiscene}();var scene=scene||{};scene.Tutorialscene=function(){function Tutorialscene(){Phaser.Group.call(this,ADCore.phaser,null,"Tutorialscene");var halfWidth=Config.Core.Dimensions.width/2;this.background=new ADCore.Interface(new Vector2(0,0),"tutorialbackground"),this.addChild(this.background),this.header=(new ADCore.Text).value("Tutorial").position(new Vector2(halfWidth,50)).anchor(new Vector2(.5,.5)).font("comfortaa").size(30).weight("bold").finish(),this.addChild(this.header),this.tutorialscreen1=new ADCore.Interface(new Vector2(0,0),"tutorialscreen1"),this.tutorialscreen1.x=halfWidth-1.25*this.tutorialscreen1.width,this.tutorialscreen1.y=100,this.addChild(this.tutorialscreen1),this.tutorialscreen2=new ADCore.Interface(new Vector2(0,0),"tutorialscreen2"),this.tutorialscreen2.x=halfWidth+.25*this.tutorialscreen2.width,this.tutorialscreen2.y=100,this.addChild(this.tutorialscreen2),this.tutorialscreen3=new ADCore.Interface(new Vector2(0,0),"tutorialscreen3"),this.tutorialscreen3.x=halfWidth-1.25*this.tutorialscreen3.width,this.tutorialscreen3.y=275,this.addChild(this.tutorialscreen3),this.tutorialscreen4=new ADCore.Interface(new Vector2(0,0),"tutorialscreen4"),this.tutorialscreen4.x=halfWidth+.25*this.tutorialscreen4.width,this.tutorialscreen4.y=275,this.addChild(this.tutorialscreen4),this.description=(new ADCore.Text).value("Swipe om naast elkaar gelegen ballen van plek te verwisselen en zo 3 of meer van dezelfde ballen op 1 rij te krijgen.").position(new Vector2(halfWidth,500)).anchor(new Vector2(.5,.5)).font("comfortaa").size(20).weight("bold").wrap(325).finish(),this.addChild(this.description),this.startButton=new ADCore.Button(new Vector2(halfWidth,580),"startbutton-inactive"),this.startButton.onInputUp=this.onStartButtonInputUp.bind(this),this.addChild(this.startButton)}Tutorialscene.prototype=Object.create(Phaser.Group.prototype),Tutorialscene.prototype.constructor=Tutorialscene;var p=Tutorialscene.prototype;return p.onStartButtonInputUp=function(){Listener.Dispatch(scene.Event.ON_SCENE_SWITCH,this)},p.Dispose=function(){},Tutorialscene}();var scene=scene||{};scene.Event=scene.Event||{},scene.Event.ON_SCENE_SWITCH="on_scene_switch",scene.MainMenu=function(){function MainMenu(){Phaser.Group.call(this,ADCore.phaser,null,"Entityscene");var halfWidth=Config.Core.Dimensions.width/2;this.background=new ADCore.Interface(new Vector2(0,0),"menubackground"),this.addChild(this.background),this.logo=new ADCore.Interface(new Vector2(0,0),"logo"),this.logo.anchor.set(.5,.5),this.logo.x=halfWidth,this.logo.y=this.logo.height/2,this.addChild(this.logo),this.logo.Play("entry"),this.startButton=new ADCore.Button(new Vector2(this.logo.x,this.logo.y+.7*this.logo.height),"startbutton-inactive"),this.startButton.onInputUp=this.onStartButtonInputUp.bind(this),this.addChild(this.startButton)}MainMenu.prototype=Object.create(Phaser.Group.prototype),MainMenu.prototype.constructor=MainMenu;var p=MainMenu.prototype;return p.onStartButtonInputUp=function(){Listener.Dispatch(scene.Event.ON_SCENE_SWITCH,this)},p.Dispose=function(){this.removeChild(this.background),this.background.Dispose(),delete this.background,this.removeChild(this.logo),this.logo.Dispose(),delete this.logo,this.removeChild(this.startButton),this.startButton.Dispose(),delete this.startButton},MainMenu}();var scene=scene||{};scene.Game=function(){function Game(){Phaser.Group.call(this,ADCore.phaser,null,"Game"),this.viewContainer=new ADCore.ViewContainer,this.addChild(this.viewContainer),this.tilemap=new Tilemap(Global.Loaded.level.map),this.ballContainer=new ballpit.BallContainer,this.ballController=new ballpit.BallController(this.tilemap.mainLayer,this.ballContainer),this.ballController.Initialize(),this.swipePositions={start:null,end:null},Listener.Listen(ADCore.InputEvent.ON_DOWN,this,this._onDown.bind(this)),Listener.Listen(ADCore.InputEvent.ON_UP,this,this._onUp.bind(this))}Game.prototype=Object.create(Phaser.Group.prototype),Game.prototype.constructor=Game;var p=Game.prototype;return p.update=function(deltatime){this.swipePositions.start&&!this.swipePositions.end&&Debug.DrawLine(this.swipePositions.start,inputSystem.inputPosition,"#FF0000",!1),this.ballContainer.Update(deltatime)},p.render=function(){this.viewContainer.render()},p._onDown=function(caller,params){this.swipePositions.start=params.position.Clone()},p._onUp=function(caller,params){if(null!==this.swipePositions.start){this.swipePositions.end=params.position.Clone();var diff=this.swipePositions.end.Clone().Substract(this.swipePositions.start);if(0!==diff.x&&0!==diff.y){var selected=this.tilemap.mainLayer.GetTileByScreenPosition(this.swipePositions.start);if(this.ballController.CanSwap(selected)){var targeted=this.tilemap.mainLayer.GetNeighbourFromTileByDirection(selected,diff.Normalize());this.ballController.CanSwap(targeted)&&(selected.occupier.beginning=selected,targeted.occupier.beginning=targeted,this.ballController.Swap(selected,targeted))}}this.swipePositions.start=null,this.swipePositions.end=null}},p.dispose=function(){this.viewContainer.Dispose(),this.removeChild(this.viewContainer),delete this.viewContainer,this.tilemap.Dispose(),delete this.tilemap,this.ballContainer.Dispose(),delete this.ballContainer,this.ballController.Dispose(),delete this.ballController,delete this.swipePositions},Game}();var scene=scene||{};scene.Preloader=function(){function Preloader(){Phaser.Group.call(this,ADCore.phaser,null,"Preloader"),console.log("Entering Preloader")}Preloader.prototype=Object.create(Phaser.Group.prototype),Preloader.prototype.constructor=Preloader;var p=Preloader.prototype;return p.Complete=function(){},p.Dispose=function(){},Preloader}();var ballpit=ballpit||{};ballpit.Event=ballpit.Event||{},ballpit.Event.ON_BALL_DESTINATION_REACHED="on_ball_destination_reached",ballpit.Event.ON_BALL_STATE_CHANGE="on_ball_state_change",ballpit.Event.ON_BALL_DESTROY="on_ball_destroy",ballpit.ballTypes=ballpit.ballTypes||{},ballpit.ballTypes.SOCCERBALL="soccerball",ballpit.ballTypes.BASKETBALL="basketball",ballpit.ballTypes.TENNISBALL="tennisball",ballpit.ballTypes.BOWLINGBALL="bowlingball",ballpit.ballTypes.BASEBALL="baseball",ballpit.BallStates=ballpit.BallStates||{},ballpit.BallStates.IDLING="idling",ballpit.BallStates.SWAPPING="swapping",ballpit.BallStates.REVERTING="reverting",ballpit.BallStates.FALLING="falling",ballpit.BallModel=function(){function BallModel(position,type){ADCore.Entity.call(this,position),this._type=type,this._state=ballpit.BallStates.IDLING,this._velocity=Settings.Velocity.BALL,this.beginning=null,this._destination=null}BallModel.prototype=Object.create(ADCore.Entity.prototype),BallModel.prototype.constructor=BallModel;var p=BallModel.prototype;return p.Update=function(){if(this.isMoving){var distance=this.position.Distance(this._destination),difference=new Vector2(this.position.x-this._destination.x,this.position.y-this._destination.y),direction=difference.Normalize();if(distance>=10){var deltaTime=ADCore.phaser.time.elapsed/1e3,vel=direction.Exponentiate(this.velocity*deltaTime);this.position.Substract(vel)}else this.position=this._destination.Clone(),this._destination=null,Listener.Dispatch(ballpit.Event.ON_BALL_DESTINATION_REACHED,this,{ball:this})}},p.MoveTo=function(vector){this._destination=vector.Clone()},p.SwapTo=function(vector){this._destination=vector.Clone(),this.state=ballpit.BallStates.SWAPPING},p.Revert=function(){this.state=ballpit.BallStates.REVERTING},p.Destroy=function(callback){Listener.Dispatch(ballpit.Event.ON_BALL_DESTROY,this,{callback:callback})},p.__entity_dispose=p.Dispose,p.Dispose=function(){delete this._type,delete this._state,delete this._velocity,this.__entity_dispose()},p.__entity_gettersAndSetters=p.gettersAndSetters,p.gettersAndSetters=function(){this.Get("type",function(){return this._type}),this.Define("state",{get:function(){return this._state},set:function(value){if(!1===ADCore.Utilities.HasObjectValue(ballpit.BallStates,value))throw new Error(state+":State doesn't exist");this._state=value,Listener.Dispatch(ballpit.Event.ON_BALL_STATE_CHANGE,this,{state:this.state})}}),this.Get("velocity",function(){return this._velocity}),this.Get("isMoving",function(){var state_moving=this.state===ballpit.BallStates.SWAPPING||this.state===ballpit.BallStates.REVERTING||this.state===ballpit.BallStates.FALLING,destination_exists=this._destination;return state_moving&&destination_exists}),this.__entity_gettersAndSetters()},BallModel}();var ballpit=ballpit||{};ballpit.ballAnimations=ballpit.ballAnimations||{},ballpit.ballAnimations.HINT="hint",ballpit.ballAnimations.PLOP="plop",ballpit.ballAnimations.SWIPE_FAIL="swipefail",ballpit.BallView=function(){function BallView(model,key){ADCore.Display.call(this,model,key),Listener.Listen(ballpit.Event.ON_BALL_STATE_CHANGE,this,this._onStateChange.bind(this),model),Listener.Listen(ballpit.Event.ON_BALL_DESTROY,this,this._onDestroy.bind(this),model)}BallView.prototype=Object.create(ADCore.Display.prototype),BallView.prototype.constructor=BallView;var p=BallView.prototype;return p._onStateChange=function(caller,params){switch(params.state){case ballpit.BallStates.REVERTING:}},p._onDestroy=function(caller,params){params.callback()},p.__display_dispose=p.Dispose,p.Dispose=function(){this.__display_dispose()},BallView}();var ballpit=ballpit||{};ballpit.LevelLoader=function(){function LevelLoader(){this._level=-1,ADCore.EnableMutators(this)}var p=LevelLoader.prototype;return p.Initialize=function(){ADCore.phaser.load.onLoadComplete.add(this._onLoadComplete.bind(this),this)},p.LoadLevel=function(){Debug.ENABLED&&Debug.FORCE_LOAD_DEBUG_LEVEL&&(this.level=Debug.DEBUG_LEVEL);var resources=Config.ResourceLists.LEVELS[this.level];if(void 0===resources)throw new Error("Level is not known.");sceneLoader.Load(scene.Preloader),preloader.Preload(resources,ADCore.PreloadCategory.LEVEL)},p._onLoadComplete=function(){sceneLoader.current.Complete(),sceneLoader.DisposeCurrent(),Debug.ENABLED&&Debug.FORCE_LOAD_SCENE?sceneLoader.Load(Debug.DEBUG_SCENE):sceneLoader.Load(scene.Game)},p.gettersAndSetters=function(){this.Define("level",{get:function(){return this._level},set:function(value){this._level=value}})},LevelLoader}();var ballpit=ballpit||{};ballpit.Core=function(){function Core(){this.levelLoader=new ballpit.LevelLoader}var p=Core.prototype;return p.Start=function(){this.levelLoader.Initialize(),sceneLoader.Load(scene.MainMenu),Listener.ListenOnce(scene.Event.ON_SCENE_SWITCH,this,function(){sceneLoader.Load(scene.Tutorialscene),Listener.ListenOnce(scene.Event.ON_SCENE_SWITCH,this,function(){this.levelLoader.level=0,this.levelLoader.LoadLevel()}.bind(this))}.bind(this),sceneLoader.current)},p.Update=function(deltaTime){var currentScene=sceneLoader.current;currentScene&&currentScene.update&&currentScene.update(deltaTime)},p.Render=function(){var currentScene=sceneLoader.current;currentScene&&currentScene.render&&currentScene.render()},Core}();var ballpit=ballpit||{};ballpit.BallContainer=function(){function BallContainer(){this.balls=[]}var p=BallContainer.prototype;return p.Update=function(){for(var len=this.balls.length,i=len-1;i>=0;i--){this.balls[i].Update()}},p.AddBall=function(position,type){var ballModel=new ballpit.EntityFactory.AddBall(position,type);return this.balls.push(ballModel),ballModel},p.AddRandomBall=function(position){var keys=Object.keys(ballpit.ballTypes),randomType=ballpit.ballTypes[keys[keys.length*Math.random()<<0]];return this.AddBall(position,randomType)},p.RemoveBall=function(ball){var index=this.balls.indexOf(ball);this.balls.splice(index,1),ball.Destroy(function(){Listener.Dispatch(ADCore.Event.ON_MODEL_REMOVE,this,{model:ball}),ball.Dispose()}.bind(this))},BallContainer}();var ballpit=ballpit||{};ballpit.Event=ballpit.Event||{},ballpit.Event.ON_BALL_ALIGN="on_ball_align",ballpit.Event.ON_BALLS_SPAWNED="on_balls_spawned",ballpit.BallController=function(){function BallController(layer,ballContainer){this._layer=layer,this._ballContainer=ballContainer,this._rows=this._layer.tiledata,this._helper=new ballpit.BallHelper(this._layer,this._ballContainer),Listener.Listen(ballpit.Event.ON_BALL_ALIGN,this,this._onBallAlign.bind(this),this),Listener.Listen(ballpit.Event.ON_BALL_DESTINATION_REACHED,this,this._onBallDestinationReached.bind(this))}var p=BallController.prototype;return p.Initialize=function(){for(var len=this._layer.width,x=0;x<len;x++)this.RestoreColumn(x)},p.Swap=function(selected,targeted){if(selected===targeted)throw new Error("Can't swap the selected with the selected");var selected_occupier=selected.occupier,targeted_occupier=targeted.occupier;selected.occupier=targeted_occupier,targeted.occupier=selected_occupier,selected_occupier.beginning=selected,targeted_occupier.beginning=targeted,selected_occupier&&selected_occupier.SwapTo(targeted.position),targeted_occupier&&targeted_occupier.SwapTo(selected.position)},p.Move=function(selected,targeted){if(selected===targeted)throw new Error("Can't swap the selected with the selected");var selected_occupier=selected.occupier,targeted_occupier=targeted.occupier;selected.occupier=targeted_occupier,targeted.occupier=selected_occupier,selected_occupier&&selected_occupier.MoveTo(targeted.position),targeted_occupier&&targeted_occupier.MoveTo(selected.position)},p.DropColumn=function(tileX){for(var len=this._rows.length,y=len-1;y>=0;y--)for(var row=this._rows[y],row_len=row.length,x=0;x<row_len;x++)if(x===tileX){var tile=row[x];this.CanSwap(tile)&&this.DropBall(tile)}},p.DropBall=function(tile){var lowest=this._helper.GetLowestBeneath(tile);tile!==lowest&&(tile.occupier.state=ballpit.BallStates.FALLING,this.Move(tile,lowest))},p.RestoreColumn=function(tileX){for(var y_spawns=[],len=this._rows.length,y=len-1;y>=0;y--)for(var row=this._rows[y],row_len=row.length,x=0;x<row_len;x++)if(y_spawns[x]||(y_spawns[x]=-1),x===tileX){var tile=row[x];if(!1===this.CanSwap(tile)){var position=this._layer.TilePositionToScreenPosition(new Vector2(tile.tileposition.x,y_spawns[x]));y_spawns[x]--;var ball=this._ballContainer.AddRandomBall(position);tile.occupier=ball,ball.MoveTo(tile.position),ball.state=ballpit.BallStates.FALLING}}},p.CanSwap=function(tile){return null!==tile&&tile.occupier instanceof ballpit.BallModel},p._onBallDestinationReached=function(caller,params){var tile_current=this._layer.GetTileByOccupier(params.ball),ball_current=params.ball,tile_other=params.ball.beginning,ball_other=tile_other?tile_other.occupier:null,aligned=this._helper.GetAligned(tile_current);aligned.length>0?(ball_current.position=tile_current.position.Clone(),ball_current.state=ballpit.BallStates.IDLING,Debug.LogWarning("Warning: I'm idling the other his movement and thus 2 ball aligns can NEVER happen."),ball_other&&(ball_other.position=tile_other.position.Clone(),ball_other.state=ballpit.BallStates.IDLING),Listener.Dispatch(ballpit.Event.ON_BALL_ALIGN,this,{owner:tile_current,aligned:aligned})):ball_current.state===ballpit.BallStates.SWAPPING&&(ball_other.state===ballpit.BallStates.REVERTING?this.Move(tile_current,tile_other):ball_current.state=ballpit.BallStates.REVERTING)},p._onBallAlign=function(caller,params){var tiles=params.aligned,rowsAffected=[];tiles.push(params.owner);for(var len=tiles.length,i=0;i<len;i++){var tile=tiles[i],occupier=tile.occupier;this._ballContainer.RemoveBall(occupier),tiles[i].occupier=null,rowsAffected.contains(tile.tileposition.x)||rowsAffected.push(tile.tileposition.x)}for(var col_len=rowsAffected.length,j=0;j<col_len;j++)this.DropColumn(rowsAffected[j]),this.RestoreColumn(rowsAffected[j])},p.dispose=function(){throw new Error("NOT MADE YET")},BallController}();var ballpit=ballpit||{};ballpit.BallHelper=function(){function BallHelper(layer,ballContainer){this.layer=layer,this.ballContainer=ballContainer}var p=BallHelper.prototype;return p.GetLowestBeneath=function(tile){for(var result=tile,direction=new Vector2(0,1),checked=this.layer.GetNeighbourFromTileByDirection(tile,direction);null!==checked&&null===checked.occupier;)result=checked,checked=this.layer.GetNeighbourFromTileByDirection(checked,direction);return result},p.GetTilesByDirection=function(tile,direction){for(var tiles=[],checked=tile;checked;)checked!==tile&&tiles.push(checked),checked=this.layer.GetNeighbourFromTileByDirection(checked,direction);return tiles},p.GetAligned=function(tile){if(null===tile.occupier)throw new Error("Tile doesn't have a ball on it.");var aligned=[],horizontal_aligns=this.GetAlignedByAxis(tile,0);horizontal_aligns.length+1>=3&&(aligned=aligned.concat(horizontal_aligns));var vertical_aligns=this.GetAlignedByAxis(tile,1);return vertical_aligns.length+1>=3&&(aligned=aligned.concat(vertical_aligns)),aligned},p.GetAlignedByDirection=function(tile,direction){if(null===tile.occupier)throw new Error("Tile doesn't have a ball on it.");for(var occupier=tile.occupier,aligned=[],type=occupier.type,checked=tile;checked&&checked.occupier&&checked.occupier.type===type;)checked!==tile&&aligned.push(checked),checked=this.layer.GetNeighbourFromTileByDirection(checked,direction);return aligned},p.GetAlignedByAxis=function(tile,axis){if(null===tile.occupier)throw new Error("Tile doesn't have a ball on it.");var directions,aligned=[];if(0===axis)directions=[new Vector2(1,0),new Vector2(-1,0)];else{if(1!==axis)throw new Error("Axis not known");directions=[new Vector2(0,1),new Vector2(0,-1)]}for(var len=directions.length,i=0;i<len;i++){var dir_aligns=this.GetAlignedByDirection(tile,directions[i]);aligned=aligned.concat(dir_aligns)}return aligned},p.Dispose=function(){delete this.layer,delete this.ballContainer},BallHelper}();var ballpit=ballpit||{};ballpit.EntityFactory={},ballpit.EntityFactory.AddBall=function(position,type){var model=new ballpit.BallModel(position,type);return Listener.Dispatch(ADCore.Event.ON_MODEL_ADD,this,{model:model,key:type,viewtype:ballpit.BallView}),model};var Debug=new ADCore.Debug;if(Debug.ENABLED=!1,Debug.FORCE_LOAD_DEBUG_LEVEL=!1,Debug.DEBUG_LEVEL=0,Debug.FORCE_LOAD_SCENE=!1,Debug.DEBUG_SCENE=scene.Tutorialscene,void 0!==Debug&&Debug.ENABLED)Object.defineProperties(this,{help:{get:function(){return"Debug Commands:\n---------------\n \nGet: exp | Example\n"}},exp:{get:function(){return"HELLO WORLD!"}}});else if(void 0===Debug)throw new Error("Load DebugCommands.js after Debug Initialization not before.");